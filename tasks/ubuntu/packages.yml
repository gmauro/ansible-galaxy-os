---
# Install system packages
- name: Prerequisites
  apt:
    name: "{{ packages }}"
    state: "{{ apt_packages_state }}"
    update_cache: yes
    vars:
      packages:
      - apt-utils
      - apt-transport-https
      - ca-certificates

- name: Add custom Galaxy PPA (used for nginx package)
  apt_repository: repo="ppa:galaxyproject/nginx" update_cache=no
  when: ansible_distribution_version <= "15.04"

- name: Pin Galaxy's versions of the PPAs so they take priority over the defaults
  copy: src=galaxyproject-nginx-pin-600 dest=/etc/apt/preferences.d/galaxyproject-nginx-pin-600
  when: ansible_distribution_version <= "15.04"

- name: Add custom Galaxy PPA (used for nginx package)
  apt_repository: repo="ppa:m-vandenbeek/nginx-upload-store" update_cache=no
  when: ansible_distribution_version > "15.04"

- name: Pin Galaxy's versions of the PPAs so they take priority over the defaults
  copy: src=m-vandenbeek-nginx-upload-store-pin-600 dest=/etc/apt/preferences.d/m-vandenbeek-nginx-upload-store-pin-600
  when: ansible_distribution_version > "15.04"

- name: Add Docker repository key
  apt_key: keyserver=hkp://p80.pool.sks-keyservers.net:80 id=58118E89F3A912897C070ADBF76221572C52609D
  when: configure_docker

- name: Add Docker repository
  apt_repository: repo='deb https://apt.dockerproject.org/repo ubuntu-{{ ansible_distribution_release }} main' update_cache=no #'
  when: configure_docker

- name: Update APT cache
  apt: update_cache=yes

- name: Install required system packages
  apt:
    name: "{{ packages }}"
    state: "{{ apt_packages_state }}"
    install_recommends: no
    vars:
      packages:
      - ant
      - cmake
      - curl
      - g++
      - gcc
      - gfortran
      - git-core
      - libffi-dev
      - liblapack-dev
      - libncurses5-dev
      - libopenblas-dev
      - libpam0g-dev
      - libpq-dev
      - libsparsehash-dev
      - make
      - mercurial
      - nginx-extras
      - openssh-server
      - patch
      - pkg-config
      - python-boto
      - python-dev
      - python-prettytable
      - python-psycopg2
      - python-virtualenv
      - python-pip
      - rsync
      - samtools
      - slurm-drmaa-dev
      - supervisor
      - swig
      - sysstat
      - unzip
      - wget
      - zlib1g-dev

- name: Install packages for system maintenance
  apt:
    name: "{{ packages }}"
    state: "{{ apt_packages_state }}"
    vars:
      packages:
      - atop
      - bioperl
      - ipython
      - iotop
      - htop
      - iftop
      - nmon
      - axel
      - vim
  when: install_maintainance_packages

- name: Install required system packages - release_specific
  apt:
    name: "{{ packages }}"
    state: "{{ apt_packages_state }}"
    vars:
      packages:
      - postgresql-9.3
      - postgresql-client-9.3
      - postgresql-plpython-9.3
      - postgresql-server-dev-9.3
  when: ansible_distribution_version <= "15.04"

- name: Install required system packages - 15.10
  apt:
    name: "{{ packages }}"
    state: "{{ apt_packages_state }}"
    vars:
      packages:
      - postgresql-9.4
      - postgresql-client-9.4
      - postgresql-plpython-9.4
      - postgresql-server-dev-9.4
      - virtualenv
  when: ansible_distribution_version == "15.10"

- name: Install required system packages - 16.04
  apt:
    name: "{{ packages }}"
    state: "{{ apt_packages_state }}"
    vars:
      packages:
      - postgresql-9.5
      - postgresql-client-9.5
      - postgresql-plpython-9.5
      - postgresql-server-dev-9.5
      - virtualenv
  when: ansible_distribution_version == "16.04"
